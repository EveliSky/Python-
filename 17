扩展Python
Python意味着易用和提升开发速度，单编写高性能代码不是一个好的选择。
17.1 考虑那个更重要
开发速度和运行速度需要权衡
一个比较好方法
1在Python中开发一个原型程序
2分析并不能找出性能瓶颈
3使用高性能语言作为扩展重写瓶颈代码
另一个使用其他语言的情况是一些遗留代码legacy code
遗留代码只有特定语言代码。可以通过包装这些代码，扩展为Python库。
SWIG工具，Jython和IronPython
17.2 简单途径 Jython和IronPython
Jython对应Java，IronPython对应C#和其他.Net语言。使用两者可以直接访问底层语言中的类和模块。
17.3 编写C语言扩展
扩展Python通常是指扩展CPython，用C语言实现的标准Python版本
17.3.1 SWIG
SWIG是简单包装和接口生成器缩写。能够扩展多种语言。
1它是做什么的
有了一些C语言代码
1位代码写接口文件
2在接口文件上运行SWIG,产生包装代码
3把原始C语言和包装代码一起编译来缠身共享库
