'''
1.2 交互式解释器
print("hello word");
1.4 数字和表达式
交互环境下可以直接计算 2+2 输出为4
有时变量类型会影响计算法则
1/2 0.5
1//2 0.0 会取整
10%3 1 取余
10%3.0 1.0
2**3 8 幂运算
1.4.1 长整型数
能够处理很长的整数
100000000000000000
1.4.2 十六进制和八进制
0xaf 175
0o10 8  第二个符号是字幕o
1.5 变量
x = 3  此操作成为赋值；x为变量名
1.6 语句
表达式是某事
语句是做某事
1.7 获取用户输入
x = input("x : ")
1.8 函数
pow(2,3) 8
调用函数，提供参数，返回结果
复合调用 10 + pow(2,3*5)/3.0  10932.66666
abs(-10) 10 绝对值
round(1/2) 0 四舍五入，与取整不同
1.9 模块
import math
math.floor(32.9) 32 向下取整
import 模块.函数
from 模块 import  函数
from math import sqrt
sqrt(9) 3
1.9.1 cmath和复数
sqrt(-9) 报错或者返回nan
import cmath
cmath.sqrt(-9) 3j  虚数以j结尾
(1 + 3j) * ((9 + 4j) (-3 + 31j)  可直接对复数进行计算
1.10 -- 1.10.2 运行py文件
1.10.3 注释
#注释语句  单行注释
#'''''' """""" 多行注释
1.11 字符串
"Hello world" 字符串形式表达
1.11.1 单引号字符串和转义引号
单引号和双引号没有区别，但是单引号如果作为其他意义使用时，可以使用双引号
不过为了简洁，可以使用转义字符，反斜杠 \
'let\'s go'
1.11.2 拼接字符串
x = 'hello ',y='world'
x + y 'hello world'
1.11.3 字符串表示，str和repr
str("hello world") 'hello world' 会转换为合理形式的字符串
repr("hello world") "'hello world'" 会转换为python表达式的形式
1.11.4 input 和 raw_input 的比较
input 要求输入要符合合法的表达式，会自动判断变量类型
raw_input 会将输入的所有内容都作为字符串
1.11.5 长字符串，原始字符串和Unicode
长字符串
#print('''123
#123
#123''') 可以显示长字符串
'''
原始字符串，不会解释转义字符。最后一个字符不能为\。
如果最后一个字符要显示\，需要作为单独字符处理
print(r'\n') \n
Unicode字符串
也可以成为Unicode对象。Python普通字符是以8位ASCII码存储
Unicode对象以16位Unicode存储
print(u'ooo')
'''
